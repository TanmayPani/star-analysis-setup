//
// File generated by rootcint at Mon May  1 03:46:21 2023

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl73_gcc485dIobjdIStRootdIStMyAnalysisMakerdIStMyAnalysisMaker_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StMyAnalysisMaker_Cint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void StEmcPosition2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StEmcPosition2(void *p = 0);
   static void *newArray_StEmcPosition2(Long_t size, void *p);
   static void delete_StEmcPosition2(void *p);
   static void deleteArray_StEmcPosition2(void *p);
   static void destruct_StEmcPosition2(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StEmcPosition2*)
   {
      ::StEmcPosition2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StEmcPosition2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StEmcPosition2", ::StEmcPosition2::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyAnalysisMaker/StEmcPosition2.h", 23,
                  typeid(::StEmcPosition2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StEmcPosition2::Dictionary, isa_proxy, 4,
                  sizeof(::StEmcPosition2) );
      instance.SetNew(&new_StEmcPosition2);
      instance.SetNewArray(&newArray_StEmcPosition2);
      instance.SetDelete(&delete_StEmcPosition2);
      instance.SetDeleteArray(&deleteArray_StEmcPosition2);
      instance.SetDestructor(&destruct_StEmcPosition2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StEmcPosition2*)
   {
      return GenerateInitInstanceLocal((::StEmcPosition2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StEmcPosition2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyStTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyStTrack(void *p = 0);
   static void *newArray_MyStTrack(Long_t size, void *p);
   static void delete_MyStTrack(void *p);
   static void deleteArray_MyStTrack(void *p);
   static void destruct_MyStTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyStTrack*)
   {
      ::MyStTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyStTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyStTrack", ::MyStTrack::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyAnalysisMaker/StEventTreeStruct.h", 14,
                  typeid(::MyStTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyStTrack::Dictionary, isa_proxy, 4,
                  sizeof(::MyStTrack) );
      instance.SetNew(&new_MyStTrack);
      instance.SetNewArray(&newArray_MyStTrack);
      instance.SetDelete(&delete_MyStTrack);
      instance.SetDeleteArray(&deleteArray_MyStTrack);
      instance.SetDestructor(&destruct_MyStTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyStTrack*)
   {
      return GenerateInitInstanceLocal((::MyStTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyStTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyStTower_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyStTower(void *p = 0);
   static void *newArray_MyStTower(Long_t size, void *p);
   static void delete_MyStTower(void *p);
   static void deleteArray_MyStTower(void *p);
   static void destruct_MyStTower(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyStTower*)
   {
      ::MyStTower *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyStTower >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyStTower", ::MyStTower::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyAnalysisMaker/StEventTreeStruct.h", 49,
                  typeid(::MyStTower), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyStTower::Dictionary, isa_proxy, 4,
                  sizeof(::MyStTower) );
      instance.SetNew(&new_MyStTower);
      instance.SetNewArray(&newArray_MyStTower);
      instance.SetDelete(&delete_MyStTower);
      instance.SetDeleteArray(&deleteArray_MyStTower);
      instance.SetDestructor(&destruct_MyStTower);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyStTower*)
   {
      return GenerateInitInstanceLocal((::MyStTower*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyStTower*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyStEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyStEvent(void *p = 0);
   static void *newArray_MyStEvent(Long_t size, void *p);
   static void delete_MyStEvent(void *p);
   static void deleteArray_MyStEvent(void *p);
   static void destruct_MyStEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyStEvent*)
   {
      ::MyStEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyStEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyStEvent", ::MyStEvent::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyAnalysisMaker/StEventTreeStruct.h", 97,
                  typeid(::MyStEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyStEvent::Dictionary, isa_proxy, 4,
                  sizeof(::MyStEvent) );
      instance.SetNew(&new_MyStEvent);
      instance.SetNewArray(&newArray_MyStEvent);
      instance.SetDelete(&delete_MyStEvent);
      instance.SetDeleteArray(&deleteArray_MyStEvent);
      instance.SetDestructor(&destruct_MyStEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyStEvent*)
   {
      return GenerateInitInstanceLocal((::MyStEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyStEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StMyAnalysisMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_StMyAnalysisMaker(void *p);
   static void deleteArray_StMyAnalysisMaker(void *p);
   static void destruct_StMyAnalysisMaker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StMyAnalysisMaker*)
   {
      ::StMyAnalysisMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StMyAnalysisMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StMyAnalysisMaker", ::StMyAnalysisMaker::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyAnalysisMaker/StMyAnalysisMaker.h", 28,
                  typeid(::StMyAnalysisMaker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StMyAnalysisMaker::Dictionary, isa_proxy, 4,
                  sizeof(::StMyAnalysisMaker) );
      instance.SetDelete(&delete_StMyAnalysisMaker);
      instance.SetDeleteArray(&deleteArray_StMyAnalysisMaker);
      instance.SetDestructor(&destruct_StMyAnalysisMaker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StMyAnalysisMaker*)
   {
      return GenerateInitInstanceLocal((::StMyAnalysisMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StMyAnalysisMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr StEmcPosition2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StEmcPosition2::Class_Name()
{
   return "StEmcPosition2";
}

//______________________________________________________________________________
const char *StEmcPosition2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StEmcPosition2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StEmcPosition2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StEmcPosition2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StEmcPosition2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StEmcPosition2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StEmcPosition2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StEmcPosition2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyStTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyStTrack::Class_Name()
{
   return "MyStTrack";
}

//______________________________________________________________________________
const char *MyStTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyStTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyStTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyStTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyStTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyStTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyStTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyStTrack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyStTower::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyStTower::Class_Name()
{
   return "MyStTower";
}

//______________________________________________________________________________
const char *MyStTower::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyStTower*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyStTower::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyStTower*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyStTower::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyStTower*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyStTower::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyStTower*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyStEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyStEvent::Class_Name()
{
   return "MyStEvent";
}

//______________________________________________________________________________
const char *MyStEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyStEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyStEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyStEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyStEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyStEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyStEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyStEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StMyAnalysisMaker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StMyAnalysisMaker::Class_Name()
{
   return "StMyAnalysisMaker";
}

//______________________________________________________________________________
const char *StMyAnalysisMaker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyAnalysisMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StMyAnalysisMaker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyAnalysisMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StMyAnalysisMaker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyAnalysisMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StMyAnalysisMaker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyAnalysisMaker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void StEmcPosition2::Streamer(TBuffer &R__b)
{
   // Stream an object of class StEmcPosition2.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StEmcPosition2::Class(),this);
   } else {
      R__b.WriteClassBuffer(StEmcPosition2::Class(),this);
   }
}

//______________________________________________________________________________
void StEmcPosition2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StEmcPosition2.
      TClass *R__cl = ::StEmcPosition2::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mGeom[4]", &mGeom);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StEmcPosition2(void *p) {
      return  p ? new(p) ::StEmcPosition2 : new ::StEmcPosition2;
   }
   static void *newArray_StEmcPosition2(Long_t nElements, void *p) {
      return p ? new(p) ::StEmcPosition2[nElements] : new ::StEmcPosition2[nElements];
   }
   // Wrapper around operator delete
   static void delete_StEmcPosition2(void *p) {
      delete ((::StEmcPosition2*)p);
   }
   static void deleteArray_StEmcPosition2(void *p) {
      delete [] ((::StEmcPosition2*)p);
   }
   static void destruct_StEmcPosition2(void *p) {
      typedef ::StEmcPosition2 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StEmcPosition2

//______________________________________________________________________________
void MyStTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyStTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MyStTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(MyStTrack::Class(),this);
   }
}

//______________________________________________________________________________
void MyStTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyStTrack.
      TClass *R__cl = ::MyStTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "index", &index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pt", &Pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eta", &Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Phi", &Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackingEff", &trackingEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MatchedTowerIndex", &MatchedTowerIndex);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyStTrack(void *p) {
      return  p ? new(p) ::MyStTrack : new ::MyStTrack;
   }
   static void *newArray_MyStTrack(Long_t nElements, void *p) {
      return p ? new(p) ::MyStTrack[nElements] : new ::MyStTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyStTrack(void *p) {
      delete ((::MyStTrack*)p);
   }
   static void deleteArray_MyStTrack(void *p) {
      delete [] ((::MyStTrack*)p);
   }
   static void destruct_MyStTrack(void *p) {
      typedef ::MyStTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MyStTrack

//______________________________________________________________________________
void MyStTower::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyStTower.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MyStTower::Class(),this);
   } else {
      R__b.WriteClassBuffer(MyStTower::Class(),this);
   }
}

//______________________________________________________________________________
void MyStTower::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyStTower.
      TClass *R__cl = ::MyStTower::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "index", &index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ADC", &ADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Energy", &Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eta", &Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Phi", &Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsHT0", &IsHT0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsHT1", &IsHT1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsHT2", &IsHT2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsHT3", &IsHT3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NMatchedTracks", &NMatchedTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EnergyCorr", &EnergyCorr);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyStTower(void *p) {
      return  p ? new(p) ::MyStTower : new ::MyStTower;
   }
   static void *newArray_MyStTower(Long_t nElements, void *p) {
      return p ? new(p) ::MyStTower[nElements] : new ::MyStTower[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyStTower(void *p) {
      delete ((::MyStTower*)p);
   }
   static void deleteArray_MyStTower(void *p) {
      delete [] ((::MyStTower*)p);
   }
   static void destruct_MyStTower(void *p) {
      typedef ::MyStTower current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MyStTower

//______________________________________________________________________________
void MyStEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyStEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MyStEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(MyStEvent::Class(),this);
   }
}

//______________________________________________________________________________
void MyStEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyStEvent.
      TClass *R__cl = ::MyStEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RunID", &RunID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventID", &EventID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gRefMult", &gRefMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RefMult", &RefMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RefMultCorr", &RefMultCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Centrality", &Centrality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Peripheral_ReWeight", &Peripheral_ReWeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MB5toMB30_ReWeight", &MB5toMB30_ReWeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsMB", &IsMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsMB5", &IsMB5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsMB30", &IsMB30);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsHT0", &IsHT0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsHT1", &IsHT1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsHT2", &IsHT2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsHT3", &IsHT3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pVtx_Z", &pVtx_Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pVtx_r", &pVtx_r);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VPD_Vz", &VPD_Vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZDCxx", &ZDCxx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BBCxx", &BBCxx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTriggers", &NTriggers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTracks", &NTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTowers", &NTowers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxTrackPt", &MaxTrackPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxTowerEt", &MaxTowerEt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tracks", (void*)&Tracks);
      R__insp.InspectMember("vector<MyStTrack>", (void*)&Tracks, "Tracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Towers", (void*)&Towers);
      R__insp.InspectMember("vector<MyStTower>", (void*)&Towers, "Towers.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyStEvent(void *p) {
      return  p ? new(p) ::MyStEvent : new ::MyStEvent;
   }
   static void *newArray_MyStEvent(Long_t nElements, void *p) {
      return p ? new(p) ::MyStEvent[nElements] : new ::MyStEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyStEvent(void *p) {
      delete ((::MyStEvent*)p);
   }
   static void deleteArray_MyStEvent(void *p) {
      delete [] ((::MyStEvent*)p);
   }
   static void destruct_MyStEvent(void *p) {
      typedef ::MyStEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MyStEvent

//______________________________________________________________________________
void StMyAnalysisMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class StMyAnalysisMaker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StMyAnalysisMaker::Class(),this);
   } else {
      R__b.WriteClassBuffer(StMyAnalysisMaker::Class(),this);
   }
}

//______________________________________________________________________________
void StMyAnalysisMaker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StMyAnalysisMaker.
      TClass *R__cl = ::StMyAnalysisMaker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pi0mass", &pi0mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "badTowers", (void*)&badTowers);
      R__insp.InspectMember("set<int>", (void*)&badTowers, "badTowers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deadTowers", (void*)&deadTowers);
      R__insp.InspectMember("set<int>", (void*)&deadTowers, "deadTowers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "badRuns", (void*)&badRuns);
      R__insp.InspectMember("set<int>", (void*)&badRuns, "badRuns.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Run_Flag", &Run_Flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TypeOfHadCorr", &TypeOfHadCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EfficiencyFile", &EfficiencyFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AnaName", (void*)&AnaName);
      R__insp.InspectMember("string", (void*)&AnaName, "AnaName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OutputFileName", (void*)&OutputFileName);
      R__insp.InspectMember("string", (void*)&OutputFileName, "OutputFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*picoDst_Maker", &picoDst_Maker);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*picoDst", &picoDst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*picoEvent", &picoEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*grefmultCorr", &grefmultCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*grefmultCorrUtil", &grefmultCorrUtil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EmcPosition", &EmcPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doppAnalysis", &doppAnalysis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZVtx_Min", &ZVtx_Min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZVtx_Max", &ZVtx_Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrackPtMin", &TrackPtMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrackEtaMin", &TrackEtaMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrackEtaMax", &TrackEtaMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrackDCAMax", &TrackDCAMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrackNHitsFitMin", &TrackNHitsFitMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrackNHitsRatioMin", &TrackNHitsRatioMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TowerEtaMin", &TowerEtaMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TowerEtaMax", &TowerEtaMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TowerEnergyMin", &TowerEnergyMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HighTowerStatus", (void*)&HighTowerStatus);
      R__insp.InspectMember("vector<vector<bool> >", (void*)&HighTowerStatus, "HighTowerStatus.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TracksMatchedToTower", (void*)&TracksMatchedToTower);
      R__insp.InspectMember("vector<vector<int> >", (void*)&TracksMatchedToTower, "TracksMatchedToTower.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrackPtMax", &TrackPtMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TowerEtMax", &TowerEtMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JetConstituentMinPt", &JetConstituentMinPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fout", &fout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tree", &tree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventTriggers", (void*)&EventTriggers);
      R__insp.InspectMember("vector<unsigned int>", (void*)&EventTriggers, "EventTriggers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RunID", &RunID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventID", &EventID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "centbin9", &centbin9);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "centbin16", &centbin16);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ref9", &ref9);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ref16", &ref16);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pVtx", &pVtx);
      R__insp.InspectMember(pVtx, "pVtx.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_Event", &_Event);
      StMaker::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_StMyAnalysisMaker(void *p) {
      delete ((::StMyAnalysisMaker*)p);
   }
   static void deleteArray_StMyAnalysisMaker(void *p) {
      delete [] ((::StMyAnalysisMaker*)p);
   }
   static void destruct_StMyAnalysisMaker(void *p) {
      typedef ::StMyAnalysisMaker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StMyAnalysisMaker

namespace ROOTDict {
   void setlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void setlEintgR_Dictionary();
   static void *new_setlEintgR(void *p = 0);
   static void *newArray_setlEintgR(Long_t size, void *p);
   static void delete_setlEintgR(void *p);
   static void deleteArray_setlEintgR(void *p);
   static void destruct_setlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const set<int>*)
   {
      set<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(set<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("set<int>", -2, "set.dll", 0,
                  typeid(set<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &setlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(set<int>) );
      instance.SetNew(&new_setlEintgR);
      instance.SetNewArray(&newArray_setlEintgR);
      instance.SetDelete(&delete_setlEintgR);
      instance.SetDeleteArray(&deleteArray_setlEintgR);
      instance.SetDestructor(&destruct_setlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Insert< set<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const set<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void setlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const set<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_setlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) set<int> : new set<int>;
   }
   static void *newArray_setlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) set<int>[nElements] : new set<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_setlEintgR(void *p) {
      delete ((set<int>*)p);
   }
   static void deleteArray_setlEintgR(void *p) {
      delete [] ((set<int>*)p);
   }
   static void destruct_setlEintgR(void *p) {
      typedef set<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class set<int>

namespace ROOTDict {
   void vectorlEMyStTowergR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMyStTowergR_Dictionary();
   static void *new_vectorlEMyStTowergR(void *p = 0);
   static void *newArray_vectorlEMyStTowergR(Long_t size, void *p);
   static void delete_vectorlEMyStTowergR(void *p);
   static void deleteArray_vectorlEMyStTowergR(void *p);
   static void destruct_vectorlEMyStTowergR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<MyStTower>*)
   {
      vector<MyStTower> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MyStTower>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MyStTower>", -2, "prec_stl/vector", 49,
                  typeid(vector<MyStTower>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEMyStTowergR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MyStTower>) );
      instance.SetNew(&new_vectorlEMyStTowergR);
      instance.SetNewArray(&newArray_vectorlEMyStTowergR);
      instance.SetDelete(&delete_vectorlEMyStTowergR);
      instance.SetDeleteArray(&deleteArray_vectorlEMyStTowergR);
      instance.SetDestructor(&destruct_vectorlEMyStTowergR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<MyStTower> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MyStTower>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMyStTowergR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<MyStTower>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEMyStTowergR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MyStTower> : new vector<MyStTower>;
   }
   static void *newArray_vectorlEMyStTowergR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MyStTower>[nElements] : new vector<MyStTower>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMyStTowergR(void *p) {
      delete ((vector<MyStTower>*)p);
   }
   static void deleteArray_vectorlEMyStTowergR(void *p) {
      delete [] ((vector<MyStTower>*)p);
   }
   static void destruct_vectorlEMyStTowergR(void *p) {
      typedef vector<MyStTower> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<MyStTower>

namespace ROOTDict {
   void vectorlEMyStTrackgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEMyStTrackgR_Dictionary();
   static void *new_vectorlEMyStTrackgR(void *p = 0);
   static void *newArray_vectorlEMyStTrackgR(Long_t size, void *p);
   static void delete_vectorlEMyStTrackgR(void *p);
   static void deleteArray_vectorlEMyStTrackgR(void *p);
   static void destruct_vectorlEMyStTrackgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<MyStTrack>*)
   {
      vector<MyStTrack> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<MyStTrack>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<MyStTrack>", -2, "prec_stl/vector", 49,
                  typeid(vector<MyStTrack>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEMyStTrackgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<MyStTrack>) );
      instance.SetNew(&new_vectorlEMyStTrackgR);
      instance.SetNewArray(&newArray_vectorlEMyStTrackgR);
      instance.SetDelete(&delete_vectorlEMyStTrackgR);
      instance.SetDeleteArray(&deleteArray_vectorlEMyStTrackgR);
      instance.SetDestructor(&destruct_vectorlEMyStTrackgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<MyStTrack> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<MyStTrack>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEMyStTrackgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<MyStTrack>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEMyStTrackgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MyStTrack> : new vector<MyStTrack>;
   }
   static void *newArray_vectorlEMyStTrackgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<MyStTrack>[nElements] : new vector<MyStTrack>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEMyStTrackgR(void *p) {
      delete ((vector<MyStTrack>*)p);
   }
   static void deleteArray_vectorlEMyStTrackgR(void *p) {
      delete [] ((vector<MyStTrack>*)p);
   }
   static void destruct_vectorlEMyStTrackgR(void *p) {
      typedef vector<MyStTrack> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<MyStTrack>

namespace ROOTDict {
   void vectorlEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEboolgR_Dictionary();
   static void *new_vectorlEboolgR(void *p = 0);
   static void *newArray_vectorlEboolgR(Long_t size, void *p);
   static void delete_vectorlEboolgR(void *p);
   static void deleteArray_vectorlEboolgR(void *p);
   static void destruct_vectorlEboolgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<bool>*)
   {
      vector<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bool>", -2, "vectorbool.dll", 0,
                  typeid(vector<bool>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEboolgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bool>) );
      instance.SetNew(&new_vectorlEboolgR);
      instance.SetNewArray(&newArray_vectorlEboolgR);
      instance.SetDelete(&delete_vectorlEboolgR);
      instance.SetDeleteArray(&deleteArray_vectorlEboolgR);
      instance.SetDestructor(&destruct_vectorlEboolgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEboolgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool> : new vector<bool>;
   }
   static void *newArray_vectorlEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool>[nElements] : new vector<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEboolgR(void *p) {
      delete ((vector<bool>*)p);
   }
   static void deleteArray_vectorlEboolgR(void *p) {
      delete [] ((vector<bool>*)p);
   }
   static void destruct_vectorlEboolgR(void *p) {
      typedef vector<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<bool>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<unsigned int>

namespace ROOTDict {
   void vectorlEvectorlEboolgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEboolgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEboolgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEboolgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEboolgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEboolgRsPgR(void *p);
   static void destruct_vectorlEvectorlEboolgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<bool> >*)
   {
      vector<vector<bool> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<bool> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<bool> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<bool> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEboolgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<bool> >) );
      instance.SetNew(&new_vectorlEvectorlEboolgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEboolgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEboolgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEboolgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEboolgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<bool> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<bool> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEboolgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<bool> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEboolgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<bool> > : new vector<vector<bool> >;
   }
   static void *newArray_vectorlEvectorlEboolgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<bool> >[nElements] : new vector<vector<bool> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEboolgRsPgR(void *p) {
      delete ((vector<vector<bool> >*)p);
   }
   static void deleteArray_vectorlEvectorlEboolgRsPgR(void *p) {
      delete [] ((vector<vector<bool> >*)p);
   }
   static void destruct_vectorlEvectorlEboolgRsPgR(void *p) {
      typedef vector<vector<bool> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<bool> >

namespace ROOTDict {
   void vectorlEvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEintgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEintgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEintgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p);
   static void destruct_vectorlEvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<int> >*)
   {
      vector<vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<int> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<int> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<int> >) );
      instance.SetNew(&new_vectorlEvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEintgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEintgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> > : new vector<vector<int> >;
   }
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> >[nElements] : new vector<vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEintgRsPgR(void *p) {
      delete ((vector<vector<int> >*)p);
   }
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p) {
      delete [] ((vector<vector<int> >*)p);
   }
   static void destruct_vectorlEvectorlEintgRsPgR(void *p) {
      typedef vector<vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<int> >

/********************************************************
* .sl73_gcc485/obj/StRoot/StMyAnalysisMaker/StMyAnalysisMaker_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStMyAnalysisMaker_Cint();

extern "C" void G__set_cpp_environmentStMyAnalysisMaker_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("StEmcPosition2.h");
  G__add_compiledheader("StEventTreeStruct.h");
  G__add_compiledheader("StMyAnalysisMaker.h");
  G__cpp_reset_tagtableStMyAnalysisMaker_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStMyAnalysisMaker_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StEmcPosition2 */
static int G__StMyAnalysisMaker_Cint_223_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StEmcPosition2* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StEmcPosition2[n];
     } else {
       p = new((void*) gvp) StEmcPosition2[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StEmcPosition2;
     } else {
       p = new((void*) gvp) StEmcPosition2;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StEmcPosition2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StEmcPosition2*) G__getstructoffset())->getTowerEtaPhi((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Float_t*) G__int(libp->para[2]), (Float_t*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StEmcPosition2*) G__getstructoffset())->getNextTowerId((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StEmcPosition2*) G__getstructoffset())->getNextTowerId((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StEmcPosition2*) G__getstructoffset())->getNextTowerId((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StEmcPosition2*) G__getstructoffset())->getNextId((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StEmcPosition2*) G__getstructoffset())->getNextId((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StEmcPosition2*) G__getstructoffset())->getDistTowerToTrack((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const StEmcPosition2*) G__getstructoffset())->getPosFromVertex(*(TVector3*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StEmcPosition2*) G__getstructoffset())->getThetaFromVertex(*(TVector3*) libp->para[0].ref, (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StEmcPosition2*) G__getstructoffset())->getEtaFromVertex(*(TVector3*) libp->para[0].ref, (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StEmcPosition2*) G__getstructoffset())->getPhiFromVertex(*(TVector3*) libp->para[0].ref, (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StEmcPosition2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StEmcPosition2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StEmcPosition2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StEmcPosition2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StEmcPosition2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StEmcPosition2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StEmcPosition2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StEmcPosition2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_223_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StEmcPosition2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyAnalysisMaker_Cint_223_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StEmcPosition2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StEmcPosition2(*(StEmcPosition2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StEmcPosition2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StEmcPosition2 G__TStEmcPosition2;
static int G__StMyAnalysisMaker_Cint_223_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StEmcPosition2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StEmcPosition2*) (soff+(sizeof(StEmcPosition2)*i)))->~G__TStEmcPosition2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StEmcPosition2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StEmcPosition2*) (soff))->~G__TStEmcPosition2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyAnalysisMaker_Cint_223_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StEmcPosition2* dest = (StEmcPosition2*) G__getstructoffset();
   *dest = *(StEmcPosition2*) libp->para[0].ref;
   const StEmcPosition2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyStTrack */
static int G__StMyAnalysisMaker_Cint_459_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyStTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyStTrack[n];
     } else {
       p = new((void*) gvp) MyStTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyStTrack;
     } else {
       p = new((void*) gvp) MyStTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_459_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyStTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyStTrack(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (short) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) MyStTrack(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (short) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_459_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyStTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyStTrack(
(int) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref
, (short) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) MyStTrack(
(int) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref
, (short) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_459_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyStTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_459_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyStTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_459_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyStTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_459_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyStTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_459_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyStTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_459_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyStTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_459_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyStTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_459_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyStTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_459_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyStTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyAnalysisMaker_Cint_459_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyStTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyStTrack(*(MyStTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyStTrack G__TMyStTrack;
static int G__StMyAnalysisMaker_Cint_459_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyStTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyStTrack*) (soff+(sizeof(MyStTrack)*i)))->~G__TMyStTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyStTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyStTrack*) (soff))->~G__TMyStTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyAnalysisMaker_Cint_459_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyStTrack* dest = (MyStTrack*) G__getstructoffset();
   *dest = *(MyStTrack*) libp->para[0].ref;
   const MyStTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyStTower */
static int G__StMyAnalysisMaker_Cint_460_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyStTower* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyStTower[n];
     } else {
       p = new((void*) gvp) MyStTower[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyStTower;
     } else {
       p = new((void*) gvp) MyStTower;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_460_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyStTower* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyStTower(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) MyStTower(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_460_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyStTower* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyStTower(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), *(TVector3*) libp->para[3].ref);
   } else {
     p = new((void*) gvp) MyStTower(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), *(TVector3*) libp->para[3].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_460_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyStTower*) G__getstructoffset())->SetHighTowerStatus(*((vector<bool>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_460_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyStTower::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_460_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyStTower::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_460_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyStTower::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_460_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyStTower::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_460_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyStTower*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_460_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyStTower::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_460_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyStTower::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_460_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyStTower::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_460_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyStTower::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyAnalysisMaker_Cint_460_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyStTower* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyStTower(*(MyStTower*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTower));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyStTower G__TMyStTower;
static int G__StMyAnalysisMaker_Cint_460_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyStTower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyStTower*) (soff+(sizeof(MyStTower)*i)))->~G__TMyStTower();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyStTower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyStTower*) (soff))->~G__TMyStTower();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyAnalysisMaker_Cint_460_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyStTower* dest = (MyStTower*) G__getstructoffset();
   *dest = *(MyStTower*) libp->para[0].ref;
   const MyStTower& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyStEvent */
static int G__StMyAnalysisMaker_Cint_461_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyStEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyStEvent[n];
     } else {
       p = new((void*) gvp) MyStEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyStEvent;
     } else {
       p = new((void*) gvp) MyStEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_461_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyStEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyStEvent((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) MyStEvent((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_461_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyStEvent*) G__getstructoffset())->ClearVectors();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_461_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyStEvent*) G__getstructoffset())->AddTrack(*(MyStTrack*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_461_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyStEvent*) G__getstructoffset())->AddTower(*(MyStTower*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_461_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyStEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_461_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyStEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_461_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyStEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_461_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyStEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_461_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyStEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_461_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyStEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_461_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyStEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_461_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyStEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_461_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyStEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyAnalysisMaker_Cint_461_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyStEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyStEvent(*(MyStEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyStEvent G__TMyStEvent;
static int G__StMyAnalysisMaker_Cint_461_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyStEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyStEvent*) (soff+(sizeof(MyStEvent)*i)))->~G__TMyStEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyStEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyStEvent*) (soff))->~G__TMyStEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyAnalysisMaker_Cint_461_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyStEvent* dest = (MyStEvent*) G__getstructoffset();
   *dest = *(MyStEvent*) libp->para[0].ref;
   const MyStEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StMyAnalysisMaker */
static int G__StMyAnalysisMaker_Cint_722_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyAnalysisMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StMyAnalysisMaker(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) StMyAnalysisMaker(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyAnalysisMaker*) G__getstructoffset())->SetRunFlag((StMyAnalysisMaker::RunFlags) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyAnalysisMaker*) G__getstructoffset())->SetZVtxMin((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyAnalysisMaker*) G__getstructoffset())->SetZVtxMax((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyAnalysisMaker*) G__getstructoffset())->SetdoppAnalysis((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyAnalysisMaker*) G__getstructoffset())->SetTrackPtMin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyAnalysisMaker*) G__getstructoffset())->SetTrackPtMax((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyAnalysisMaker*) G__getstructoffset())->SetTrackEtaMin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyAnalysisMaker*) G__getstructoffset())->SetTrackEtaMax((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyAnalysisMaker*) G__getstructoffset())->SetTrackDCAMax((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyAnalysisMaker*) G__getstructoffset())->SetTrackNHitsFitMin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyAnalysisMaker*) G__getstructoffset())->SetTrackNHitsRatioMin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyAnalysisMaker*) G__getstructoffset())->SetTowerEnergyMin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyAnalysisMaker*) G__getstructoffset())->SetTowerHadronicCorrType((StMyAnalysisMaker::HadronicCorrectionType) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyAnalysisMaker*) G__getstructoffset())->SetJetConstituentMinPt((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StMyAnalysisMaker*) G__getstructoffset())->GetEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StMyAnalysisMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyAnalysisMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StMyAnalysisMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StMyAnalysisMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyAnalysisMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyAnalysisMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyAnalysisMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyAnalysisMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyAnalysisMaker_Cint_722_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyAnalysisMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyAnalysisMaker_Cint_722_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StMyAnalysisMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StMyAnalysisMaker(*(StMyAnalysisMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StMyAnalysisMaker G__TStMyAnalysisMaker;
static int G__StMyAnalysisMaker_Cint_722_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StMyAnalysisMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StMyAnalysisMaker*) (soff+(sizeof(StMyAnalysisMaker)*i)))->~G__TStMyAnalysisMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StMyAnalysisMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StMyAnalysisMaker*) (soff))->~G__TStMyAnalysisMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* StEmcPosition2 */

/* MyStTrack */

/* MyStTower */

/* MyStEvent */

/* StMyAnalysisMaker */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStMyAnalysisMaker_Cint {
 public:
  G__Sizep2memfuncStMyAnalysisMaker_Cint(): p(&G__Sizep2memfuncStMyAnalysisMaker_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStMyAnalysisMaker_Cint::*p)();
};

size_t G__get_sizep2memfuncStMyAnalysisMaker_Cint()
{
  G__Sizep2memfuncStMyAnalysisMaker_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStMyAnalysisMaker_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StEmcPosition2))) {
     StEmcPosition2 *G__Lderived;
     G__Lderived=(StEmcPosition2*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StEmcPosition2),G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTrack))) {
     MyStTrack *G__Lderived;
     G__Lderived=(MyStTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTrack),G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTower))) {
     MyStTower *G__Lderived;
     G__Lderived=(MyStTower*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTower),G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStEvent))) {
     MyStEvent *G__Lderived;
     G__Lderived=(MyStEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStEvent),G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMaker))) {
     StMyAnalysisMaker *G__Lderived;
     G__Lderived=(StMyAnalysisMaker*)0x1000;
     {
       StMaker *G__Lpbase=(StMaker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMaker),G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMaker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMaker),G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMaker),G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMaker),G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStMyAnalysisMaker_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MyStTrack>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEMyStTrackcOallocatorlEMyStTrackgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEMyStTrackcOallocatorlEMyStTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEMyStTrackcOallocatorlEMyStTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEMyStTrackcOallocatorlEMyStTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEMyStTrackcOallocatorlEMyStTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MyStTower>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEMyStTowercOallocatorlEMyStTowergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEMyStTowercOallocatorlEMyStTowergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEMyStTowercOallocatorlEMyStTowergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEMyStTowercOallocatorlEMyStTowergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEMyStTowercOallocatorlEMyStTowergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<bool> >",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<bool,allocator<bool> > >",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int> >",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StEmcPosition2 */
static void G__setup_memvarStEmcPosition2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StEmcPosition2));
   { StEmcPosition2 *p; p=(StEmcPosition2*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StEmcGeom),-1,-1,2,"mGeom[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyStTrack */
static void G__setup_memvarMyStTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTrack));
   { MyStTrack *p; p=(MyStTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->index)-(long)(p)),105,0,0,-1,-1,-1,1,"index=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pt)-(long)(p)),100,0,0,-1,-1,-1,1,"Pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Eta)-(long)(p)),100,0,0,-1,-1,-1,1,"Eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Phi)-(long)(p)),100,0,0,-1,-1,-1,1,"Phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,-1,-1,1,"Charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackingEff)-(long)(p)),100,0,0,-1,-1,-1,1,"trackingEff=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MatchedTowerIndex)-(long)(p)),105,0,0,-1,-1,-1,1,"MatchedTowerIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyStTower */
static void G__setup_memvarMyStTower(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTower));
   { MyStTower *p; p=(MyStTower*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->index)-(long)(p)),105,0,0,-1,-1,-1,1,"index=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ADC)-(long)(p)),105,0,0,-1,-1,-1,1,"ADC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Energy)-(long)(p)),100,0,0,-1,-1,-1,1,"Energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Eta)-(long)(p)),100,0,0,-1,-1,-1,1,"Eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Phi)-(long)(p)),100,0,0,-1,-1,-1,1,"Phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsHT0)-(long)(p)),103,0,0,-1,-1,-1,1,"IsHT0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsHT1)-(long)(p)),103,0,0,-1,-1,-1,1,"IsHT1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsHT2)-(long)(p)),103,0,0,-1,-1,-1,1,"IsHT2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsHT3)-(long)(p)),103,0,0,-1,-1,-1,1,"IsHT3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NMatchedTracks)-(long)(p)),105,0,0,-1,-1,-1,1,"NMatchedTracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EnergyCorr)-(long)(p)),100,0,0,-1,-1,-1,1,"EnergyCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyStEvent */
static void G__setup_memvarMyStEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStEvent));
   { MyStEvent *p; p=(MyStEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->RunID)-(long)(p)),105,0,0,-1,-1,-1,1,"RunID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EventID)-(long)(p)),105,0,0,-1,-1,-1,1,"EventID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gRefMult)-(long)(p)),105,0,0,-1,-1,-1,1,"gRefMult=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RefMult)-(long)(p)),105,0,0,-1,-1,-1,1,"RefMult=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RefMultCorr)-(long)(p)),100,0,0,-1,-1,-1,1,"RefMultCorr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Centrality)-(long)(p)),100,0,0,-1,-1,-1,1,"Centrality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Peripheral_ReWeight)-(long)(p)),100,0,0,-1,-1,-1,1,"Peripheral_ReWeight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MB5toMB30_ReWeight)-(long)(p)),100,0,0,-1,-1,-1,1,"MB5toMB30_ReWeight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsMB)-(long)(p)),103,0,0,-1,-1,-1,1,"IsMB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsMB5)-(long)(p)),103,0,0,-1,-1,-1,1,"IsMB5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsMB30)-(long)(p)),103,0,0,-1,-1,-1,1,"IsMB30=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsHT0)-(long)(p)),103,0,0,-1,-1,-1,1,"IsHT0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsHT1)-(long)(p)),103,0,0,-1,-1,-1,1,"IsHT1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsHT2)-(long)(p)),103,0,0,-1,-1,-1,1,"IsHT2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsHT3)-(long)(p)),103,0,0,-1,-1,-1,1,"IsHT3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pVtx_Z)-(long)(p)),100,0,0,-1,-1,-1,1,"pVtx_Z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pVtx_r)-(long)(p)),100,0,0,-1,-1,-1,1,"pVtx_r=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->VPD_Vz)-(long)(p)),100,0,0,-1,-1,-1,1,"VPD_Vz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ZDCxx)-(long)(p)),100,0,0,-1,-1,-1,1,"ZDCxx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BBCxx)-(long)(p)),100,0,0,-1,-1,-1,1,"BBCxx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NTriggers)-(long)(p)),105,0,0,-1,-1,-1,1,"NTriggers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NTracks)-(long)(p)),105,0,0,-1,-1,-1,1,"NTracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NTowers)-(long)(p)),105,0,0,-1,-1,-1,1,"NTowers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MaxTrackPt)-(long)(p)),100,0,0,-1,-1,-1,1,"MaxTrackPt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MaxTowerEt)-(long)(p)),100,0,0,-1,-1,-1,1,"MaxTowerEt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tracks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEMyStTrackcOallocatorlEMyStTrackgRsPgR),G__defined_typename("vector<MyStTrack>"),-1,1,"Tracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Towers)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEMyStTowercOallocatorlEMyStTowergRsPgR),G__defined_typename("vector<MyStTower>"),-1,1,"Towers=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StMyAnalysisMaker */
static void G__setup_memvarStMyAnalysisMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMaker));
   { StMyAnalysisMaker *p; p=(StMyAnalysisMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLHadronicCorrectionType),-1,-2,1,G__FastAllocString(4096).Format("kNone=%lldLL",(long long)StMyAnalysisMaker::kNone).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLHadronicCorrectionType),-1,-2,1,G__FastAllocString(4096).Format("kHighestMatchedTrackE=%lldLL",(long long)StMyAnalysisMaker::kHighestMatchedTrackE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLHadronicCorrectionType),-1,-2,1,G__FastAllocString(4096).Format("kFull=%lldLL",(long long)StMyAnalysisMaker::kFull).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLRunFlags),-1,-2,1,G__FastAllocString(4096).Format("kRun12=%lldLL",(long long)StMyAnalysisMaker::kRun12).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLRunFlags),-1,-2,1,G__FastAllocString(4096).Format("kRun14=%lldLL",(long long)StMyAnalysisMaker::kRun14).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLMBTriggers),-1,-2,1,G__FastAllocString(4096).Format("kVPDMB=%lldLL",(long long)StMyAnalysisMaker::kVPDMB).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLMBTriggers),-1,-2,1,G__FastAllocString(4096).Format("kVPDMB_extra=%lldLL",(long long)StMyAnalysisMaker::kVPDMB_extra).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLMBTriggers),-1,-2,1,G__FastAllocString(4096).Format("kVPDMB5=%lldLL",(long long)StMyAnalysisMaker::kVPDMB5).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLMBTriggers),-1,-2,1,G__FastAllocString(4096).Format("kVPDMB30=%lldLL",(long long)StMyAnalysisMaker::kVPDMB30).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLMBTriggers),-1,-2,1,G__FastAllocString(4096).Format("kVPDMB30_extra=%lldLL",(long long)StMyAnalysisMaker::kVPDMB30_extra).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLHTTriggers),-1,-2,1,G__FastAllocString(4096).Format("kHT0=%lldLL",(long long)StMyAnalysisMaker::kHT0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLHTTriggers),-1,-2,1,G__FastAllocString(4096).Format("kHT1=%lldLL",(long long)StMyAnalysisMaker::kHT1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLHTTriggers),-1,-2,1,G__FastAllocString(4096).Format("kHT2=%lldLL",(long long)StMyAnalysisMaker::kHT2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLHTTriggers),-1,-2,1,G__FastAllocString(4096).Format("kHT3=%lldLL",(long long)StMyAnalysisMaker::kHT3).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pi0mass=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),G__defined_typename("set<int>"),-1,4,"badTowers=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),G__defined_typename("set<int>"),-1,4,"deadTowers=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),G__defined_typename("set<int>"),-1,4,"badRuns=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLRunFlags),-1,-1,4,"Run_Flag=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLHadronicCorrectionType),-1,-1,4,"TypeOfHadCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TFile),-1,-1,4,"EfficiencyFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_string),-1,-1,4,"AnaName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_string),-1,-1,4,"OutputFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StPicoDstMaker),-1,-1,4,"picoDst_Maker=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StPicoDst),-1,-1,4,"picoDst=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StPicoEvent),-1,-1,4,"picoEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StRefMultCorr),-1,-1,4,"grefmultCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StRefMultCorr),-1,-1,4,"grefmultCorrUtil=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StEmcPosition2),-1,-1,4,"EmcPosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doppAnalysis=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ZVtx_Min=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ZVtx_Max=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TrackPtMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TrackEtaMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TrackEtaMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TrackDCAMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TrackNHitsFitMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TrackNHitsRatioMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TowerEtaMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TowerEtaMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TowerEnergyMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),G__defined_typename("vector<vector<bool> >"),-1,4,"HighTowerStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<vector<int> >"),-1,4,"TracksMatchedToTower=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TrackPtMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TowerEtMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"JetConstituentMinPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TFile),-1,-1,4,"fout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TTree),-1,-1,4,"tree=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,2,"EventTriggers=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"RunID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"EventID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"centbin9=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"centbin16=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"ref9=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"ref16=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TVector3),-1,-1,2,"pVtx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStEvent),-1,-1,2,"_Event=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStMyAnalysisMaker_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStEmcPosition2(void) {
   /* StEmcPosition2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StEmcPosition2));
   G__memfunc_setup("StEmcPosition2",1379,G__StMyAnalysisMaker_Cint_223_0_1, 105, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StEmcPosition2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTowerEtaPhi",1420,G__StMyAnalysisMaker_Cint_223_0_2, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 8, 
"d - 'Double_t' 0 - eta d - 'Double_t' 0 - phi "
"F - 'Float_t' 0 - towerEta F - 'Float_t' 0 - towerPhi", "/< Return tower eta/phi", (void*) NULL, 0);
   G__memfunc_setup("getNextTowerId",1437,G__StMyAnalysisMaker_Cint_223_0_3, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 8, 
"f - 'Float_t' 0 - eta f - 'Float_t' 0 - phi "
"i - 'Int_t' 0 - nTowersdEta i - 'Int_t' 0 - nTowersdPhi", "/< Return neighbor tower id's", (void*) NULL, 0);
   G__memfunc_setup("getNextTowerId",1437,G__StMyAnalysisMaker_Cint_223_0_4, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - softId i - 'Int_t' 0 - nTowersdEta "
"i - 'Int_t' 0 - nTowersdPhi", "/< Return neighbor tower id's", (void*) NULL, 0);
   G__memfunc_setup("getNextTowerId",1437,G__StMyAnalysisMaker_Cint_223_0_5, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 8, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - e "
"i - 'Int_t' 0 - s i - 'Int_t' 0 - nTowersdEta "
"i - 'Int_t' 0 - nTowersdPhi", "/< Return neighbor tower id's", (void*) NULL, 0);
   G__memfunc_setup("getNextId",908,G__StMyAnalysisMaker_Cint_223_0_6, 105, -1, G__defined_typename("Int_t"), 0, 6, 1, 1, 8, 
"i - 'Int_t' 0 - det i - 'Int_t' 0 - m "
"i - 'Int_t' 0 - e i - 'Int_t' 0 - s "
"i - 'Int_t' 0 - nEta i - 'Int_t' 0 - nPhi", "/< Return neighbor id (works for all detectors 1=bemc, 2=bprs, 3=bsmde, 4=bsmdp)", (void*) NULL, 0);
   G__memfunc_setup("getNextId",908,G__StMyAnalysisMaker_Cint_223_0_7, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 8, 
"i - 'Int_t' 0 - det i - 'Int_t' 0 - softId "
"i - 'Int_t' 0 - nEta i - 'Int_t' 0 - nPhi", "/< Return neighbor id (works for all detectors 1=bemc, 2=bprs, 3=bsmde, 4=bsmdp)", (void*) NULL, 0);
   G__memfunc_setup("getDistTowerToTrack",1949,G__StMyAnalysisMaker_Cint_223_0_8, 102, -1, G__defined_typename("Float_t"), 0, 4, 1, 1, 8, 
"d - 'Double_t' 0 - trackEta d - 'Double_t' 0 - trackPhi "
"i - 'Int_t' 0 - nTowersdEta i - 'Int_t' 0 - nTowersdPhi", "/< Return distance from track to center of one tower", (void*) NULL, 0);
   G__memfunc_setup("getPosFromVertex",1668,G__StMyAnalysisMaker_Cint_223_0_9, 117, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TVector3), -1, 0, 2, 1, 1, 8, 
"u 'TVector3' - 11 - position i - 'Int_t' 0 - TowerId", "/< Return Position from collision vertex", (void*) NULL, 0);
   G__memfunc_setup("getThetaFromVertex",1864,G__StMyAnalysisMaker_Cint_223_0_10, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"u 'TVector3' - 11 - vertex i - 'Int_t' 0 - TowerId", "/< Return theta of the tower considering the collision vertex", (void*) NULL, 0);
   G__memfunc_setup("getEtaFromVertex",1644,G__StMyAnalysisMaker_Cint_223_0_11, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"u 'TVector3' - 11 - vertex i - 'Int_t' 0 - TowerId", "/< Return eta of the tower considering the collision vertex", (void*) NULL, 0);
   G__memfunc_setup("getPhiFromVertex",1651,G__StMyAnalysisMaker_Cint_223_0_12, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"u 'TVector3' - 11 - vertex i - 'Int_t' 0 - TowerId", "/< Return phi of the tower considering the collision vertex", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyAnalysisMaker_Cint_223_0_13, 85, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StEmcPosition2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyAnalysisMaker_Cint_223_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StEmcPosition2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyAnalysisMaker_Cint_223_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StEmcPosition2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyAnalysisMaker_Cint_223_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StEmcPosition2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyAnalysisMaker_Cint_223_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyAnalysisMaker_Cint_223_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StEmcPosition2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyAnalysisMaker_Cint_223_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StEmcPosition2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyAnalysisMaker_Cint_223_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StEmcPosition2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyAnalysisMaker_Cint_223_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StEmcPosition2::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StEmcPosition2", 1379, G__StMyAnalysisMaker_Cint_223_0_25, (int) ('i'), G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StEmcPosition2), -1, 0, 1, 1, 1, 0, "u 'StEmcPosition2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StEmcPosition2", 1505, G__StMyAnalysisMaker_Cint_223_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyAnalysisMaker_Cint_223_0_27, (int) ('u'), G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StEmcPosition2), -1, 1, 1, 1, 1, 0, "u 'StEmcPosition2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyStTrack(void) {
   /* MyStTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTrack));
   G__memfunc_setup("MyStTrack",898,G__StMyAnalysisMaker_Cint_459_0_1, 105, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyStTrack",898,G__StMyAnalysisMaker_Cint_459_0_2, 105, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTrack), -1, 0, 5, 1, 1, 0, 
"i - - 0 - i d - - 0 - pt "
"d - - 0 - eta d - - 0 - phi "
"s - - 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyStTrack",898,G__StMyAnalysisMaker_Cint_459_0_3, 105, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTrack), -1, 0, 3, 1, 1, 0, 
"i - - 0 - i u 'TVector3' - 1 - t "
"s - - 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyAnalysisMaker_Cint_459_0_4, 85, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyStTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyAnalysisMaker_Cint_459_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyStTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyAnalysisMaker_Cint_459_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyStTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyAnalysisMaker_Cint_459_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyStTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyAnalysisMaker_Cint_459_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyAnalysisMaker_Cint_459_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyStTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyAnalysisMaker_Cint_459_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyStTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyAnalysisMaker_Cint_459_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyStTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyAnalysisMaker_Cint_459_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyStTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyStTrack", 898, G__StMyAnalysisMaker_Cint_459_0_16, (int) ('i'), G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTrack), -1, 0, 1, 1, 1, 0, "u 'MyStTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyStTrack", 1024, G__StMyAnalysisMaker_Cint_459_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyAnalysisMaker_Cint_459_0_18, (int) ('u'), G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTrack), -1, 1, 1, 1, 1, 0, "u 'MyStTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyStTower(void) {
   /* MyStTower */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTower));
   G__memfunc_setup("MyStTower",926,G__StMyAnalysisMaker_Cint_460_0_1, 105, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTower), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyStTower",926,G__StMyAnalysisMaker_Cint_460_0_2, 105, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTower), -1, 0, 3, 1, 1, 0, 
"i - - 0 - tid i - - 0 - tadc "
"d - - 0 - tE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyStTower",926,G__StMyAnalysisMaker_Cint_460_0_3, 105, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTower), -1, 0, 4, 1, 1, 0, 
"i - - 0 - tid i - - 0 - tadc "
"d - - 0 - tE u 'TVector3' - 1 - towPos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHighTowerStatus",1857,G__StMyAnalysisMaker_Cint_460_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<bool,allocator<bool> >' 'vector<bool>' 0 - htstat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyAnalysisMaker_Cint_460_0_5, 85, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyStTower::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyAnalysisMaker_Cint_460_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyStTower::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyAnalysisMaker_Cint_460_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyStTower::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyAnalysisMaker_Cint_460_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyStTower::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyAnalysisMaker_Cint_460_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyAnalysisMaker_Cint_460_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyStTower::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyAnalysisMaker_Cint_460_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyStTower::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyAnalysisMaker_Cint_460_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyStTower::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyAnalysisMaker_Cint_460_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyStTower::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyStTower", 926, G__StMyAnalysisMaker_Cint_460_0_17, (int) ('i'), G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTower), -1, 0, 1, 1, 1, 0, "u 'MyStTower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyStTower", 1052, G__StMyAnalysisMaker_Cint_460_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyAnalysisMaker_Cint_460_0_19, (int) ('u'), G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStTower), -1, 1, 1, 1, 1, 0, "u 'MyStTower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyStEvent(void) {
   /* MyStEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStEvent));
   G__memfunc_setup("MyStEvent",911,G__StMyAnalysisMaker_Cint_461_0_1, 105, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyStEvent",911,G__StMyAnalysisMaker_Cint_461_0_2, 105, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStEvent), -1, 0, 2, 1, 1, 0, 
"i - - 0 - runid i - - 0 - eventid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearVectors",1229,G__StMyAnalysisMaker_Cint_461_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTrack",766,G__StMyAnalysisMaker_Cint_461_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MyStTrack' - 11 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTower",794,G__StMyAnalysisMaker_Cint_461_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'MyStTower' - 11 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyAnalysisMaker_Cint_461_0_6, 85, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyStEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyAnalysisMaker_Cint_461_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyStEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyAnalysisMaker_Cint_461_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyStEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyAnalysisMaker_Cint_461_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyStEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyAnalysisMaker_Cint_461_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyAnalysisMaker_Cint_461_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyStEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyAnalysisMaker_Cint_461_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyStEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyAnalysisMaker_Cint_461_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyStEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyAnalysisMaker_Cint_461_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyStEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyStEvent", 911, G__StMyAnalysisMaker_Cint_461_0_18, (int) ('i'), G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStEvent), -1, 0, 1, 1, 1, 0, "u 'MyStEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyStEvent", 1037, G__StMyAnalysisMaker_Cint_461_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyAnalysisMaker_Cint_461_0_20, (int) ('u'), G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStEvent), -1, 1, 1, 1, 1, 0, "u 'MyStEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStMyAnalysisMaker(void) {
   /* StMyAnalysisMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMaker));
   G__memfunc_setup("StMyAnalysisMaker",1729,G__StMyAnalysisMaker_Cint_722_0_1, 105, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMaker), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 - output", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Make",382,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finish",609,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRunFlag",987,G__StMyAnalysisMaker_Cint_722_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i 'StMyAnalysisMaker::RunFlags' - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZVtxMin",1004,G__StMyAnalysisMaker_Cint_722_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZVtxMax",1006,G__StMyAnalysisMaker_Cint_722_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetdoppAnalysis",1571,G__StMyAnalysisMaker_Cint_722_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackPtMin",1289,G__StMyAnalysisMaker_Cint_722_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackPtMax",1291,G__StMyAnalysisMaker_Cint_722_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackEtaMin",1375,G__StMyAnalysisMaker_Cint_722_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackEtaMax",1377,G__StMyAnalysisMaker_Cint_722_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackDCAMax",1295,G__StMyAnalysisMaker_Cint_722_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackNHitsFitMin",1870,G__StMyAnalysisMaker_Cint_722_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackNHitsRatioMin",2090,G__StMyAnalysisMaker_Cint_722_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTowerEnergyMin",1739,G__StMyAnalysisMaker_Cint_722_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTowerHadronicCorrType",2461,G__StMyAnalysisMaker_Cint_722_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i 'StMyAnalysisMaker::HadronicCorrectionType' - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetJetConstituentMinPt",2263,G__StMyAnalysisMaker_Cint_722_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - pt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvent",802,G__StMyAnalysisMaker_Cint_722_0_19, 85, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_MyStEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUpBadRuns",1184,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUpBadTowers",1404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUpDeadTowers",1507,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEventMB",845,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "i 'StMyAnalysisMaker::MBTriggers' - 0 - mbtype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackingEfficiency",2120,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 4, 1, 4, 0, 
"u 'TVector3' - 1 - p i - - 0 - centbin "
"d - - 0 - zdcx U 'TFile' - 0 - infile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunOverEmcTriggers",1837,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunOverTracks",1337,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunOverTowers",1365,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunOverTowerClusters",2103,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BookTree",795,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyAnalysisMaker_Cint_722_0_30, 85, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StMyAnalysisMaker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyAnalysisMaker_Cint_722_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyAnalysisMaker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyAnalysisMaker_Cint_722_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StMyAnalysisMaker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyAnalysisMaker_Cint_722_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StMyAnalysisMaker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyAnalysisMaker_Cint_722_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyAnalysisMaker_Cint_722_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyAnalysisMaker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyAnalysisMaker_Cint_722_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyAnalysisMaker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyAnalysisMaker_Cint_722_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyAnalysisMaker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyAnalysisMaker_Cint_722_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyAnalysisMaker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StMyAnalysisMaker", 1729, G__StMyAnalysisMaker_Cint_722_0_42, (int) ('i'), G__get_linked_tagnum(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMaker), -1, 0, 1, 1, 1, 0, "u 'StMyAnalysisMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StMyAnalysisMaker", 1855, G__StMyAnalysisMaker_Cint_722_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStMyAnalysisMaker_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStMyAnalysisMaker_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStMyAnalysisMaker_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_StEmcGeom = { "StEmcGeom" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_StEmcPosition2 = { "StEmcPosition2" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_MyStTrack = { "MyStTrack" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_MyStTower = { "MyStTower" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_MyStEvent = { "MyStEvent" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_vectorlEMyStTrackcOallocatorlEMyStTrackgRsPgR = { "vector<MyStTrack,allocator<MyStTrack> >" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEMyStTrackcOallocatorlEMyStTrackgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MyStTrack,allocator<MyStTrack> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_vectorlEMyStTowercOallocatorlEMyStTowergRsPgR = { "vector<MyStTower,allocator<MyStTower> >" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEMyStTowercOallocatorlEMyStTowergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MyStTower,allocator<MyStTower> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TDataSet = { "TDataSet" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_StMaker = { "StMaker" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR = { "set<int,less<int>,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_StRefMultCorr = { "StRefMultCorr" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_StPicoDstMaker = { "StPicoDstMaker" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_StPicoDst = { "StPicoDst" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_StPicoEvent = { "StPicoEvent" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_StMyAnalysisMaker = { "StMyAnalysisMaker" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLHadronicCorrectionType = { "StMyAnalysisMaker::HadronicCorrectionType" , 101 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLRunFlags = { "StMyAnalysisMaker::RunFlags" , 101 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLMBTriggers = { "StMyAnalysisMaker::MBTriggers" , 101 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLHTTriggers = { "StMyAnalysisMaker::HTTriggers" , 101 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR = { "vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStMyAnalysisMaker_Cint() {
  G__StMyAnalysisMaker_CintLN_TClass.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TBuffer.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TMemberInspector.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TObject.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TNamed.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_string.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TVector3.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_StEmcGeom.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_StEmcPosition2.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_MyStTrack.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_MyStTower.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_MyStEvent.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_vectorlEMyStTrackcOallocatorlEMyStTrackgRsPgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEMyStTrackcOallocatorlEMyStTrackgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_vectorlEMyStTowercOallocatorlEMyStTowergRsPgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEMyStTowercOallocatorlEMyStTowergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TDataSet.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TFile.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_TTree.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_StMaker.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_StRefMultCorr.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_StPicoDstMaker.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_StPicoDst.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_StPicoEvent.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_StMyAnalysisMaker.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLHadronicCorrectionType.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLRunFlags.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLMBTriggers.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLHTTriggers.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStMyAnalysisMaker_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_string);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TVector3);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_StEmcGeom);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_StEmcPosition2),sizeof(StEmcPosition2),-1,292096,(char*)NULL,G__setup_memvarStEmcPosition2,G__setup_memfuncStEmcPosition2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_MyStTrack),sizeof(MyStTrack),-1,324864,(char*)NULL,G__setup_memvarMyStTrack,G__setup_memfuncMyStTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_MyStTower),sizeof(MyStTower),-1,324864,(char*)NULL,G__setup_memvarMyStTower,G__setup_memfuncMyStTower);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_MyStEvent),sizeof(MyStEvent),-1,324864,(char*)NULL,G__setup_memvarMyStEvent,G__setup_memfuncMyStEvent);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_vectorlEMyStTrackcOallocatorlEMyStTrackgRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEMyStTrackcOallocatorlEMyStTrackgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_vectorlEMyStTowercOallocatorlEMyStTowergRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEMyStTowercOallocatorlEMyStTowergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TDataSet);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TFile);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_TTree);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_StMaker);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_StRefMultCorr);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_StPicoDstMaker);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_StPicoDst);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_StPicoEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMaker),sizeof(StMyAnalysisMaker),-1,324608,(char*)NULL,G__setup_memvarStMyAnalysisMaker,G__setup_memfuncStMyAnalysisMaker);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLHadronicCorrectionType);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLRunFlags);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLMBTriggers);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_StMyAnalysisMakercLcLHTTriggers);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupStMyAnalysisMaker_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStMyAnalysisMaker_Cint()");
  G__set_cpp_environmentStMyAnalysisMaker_Cint();
  G__cpp_setup_tagtableStMyAnalysisMaker_Cint();

  G__cpp_setup_inheritanceStMyAnalysisMaker_Cint();

  G__cpp_setup_typetableStMyAnalysisMaker_Cint();

  G__cpp_setup_memvarStMyAnalysisMaker_Cint();

  G__cpp_setup_memfuncStMyAnalysisMaker_Cint();
  G__cpp_setup_globalStMyAnalysisMaker_Cint();
  G__cpp_setup_funcStMyAnalysisMaker_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStMyAnalysisMaker_Cint();
  return;
}
class G__cpp_setup_initStMyAnalysisMaker_Cint {
  public:
    G__cpp_setup_initStMyAnalysisMaker_Cint() { G__add_setup_func("StMyAnalysisMaker_Cint",(G__incsetup)(&G__cpp_setupStMyAnalysisMaker_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStMyAnalysisMaker_Cint() { G__remove_setup_func("StMyAnalysisMaker_Cint"); }
};
G__cpp_setup_initStMyAnalysisMaker_Cint G__cpp_setup_initializerStMyAnalysisMaker_Cint;

